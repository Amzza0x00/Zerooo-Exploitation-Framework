import base64
import json

from zerooo.core.asyncpool import async_run
from zerooo.core.log import LOGGER
from zerooo.core.options import Option, OptArgset
from zerooo.request.httpclient import HttpClient
from zerooo.utils.config import config
from zerooo.utils.util import parse_url, parse_url_path


class Plugin(Option):

    def __init__(self):
        super().__init__()
        self.api_url = 'https://fofa.info/api/v1/search/all'
        self.api_email = config.read_config('fofa', 'email')
        self.api_key = config.read_config('fofa', 'api-key')

    async def api_query(self, items):
        item = items.split('^')
        search = item[0]
        page = item[1]
        qbase64 = (base64.b64encode(search.encode('utf-8'))).decode('utf-8')
        url_query = f'{self.api_url}?email={self.api_email}&key={self.api_key}&qbase64={qbase64}&page={page}&size=10&full=true'
        resp = await HttpClient().send_request_cgi('GET', url=url_query)
        return resp

    def api_result_callback(self, future):
        resp = future.result()
        if resp['code'] == 200:
            res_json = json.loads(resp['text'])
            if not res_json['error']:
                urls = []
                for i in res_json['results']:
                    url_list = parse_url(i[0])
                    for i in url_list:
                        urls.append(parse_url_path(i))
                        LOGGER.info(f'添加url (Add url): {i}')

                OptArgset.__set__('urls', urls)
                LOGGER.info(f'添加完成, 共计 (Add done, total) : {len(urls)}')
            else:
                LOGGER.warning(res_json['errmsg'])

    def run(self):
        while True:
            search = input("请输入查询语法 (Please enter query syntax) : ")
            page = input("请输入查询页数 (Please enter the number of inquiry pages) :")
            if search and page != '':
                break

        strs = f"{search}^{page}"
        items = [strs]
        async_run(self.api_query, items, self.api_result_callback, limit=50)
