import random
import re
import sqlite3
import os

from prettytable import PrettyTable, PLAIN_COLUMNS
from zerooo.core.log import LOGGER
from zerooo.core.common import IS_WIN


class ModuleManager:

    def __init__(self):
        self.db_file = os.path.join(os.path.dirname(__file__), 'core.db')
        self.conn = sqlite3.connect(self.db_file)
        self.cu = self.conn.cursor()
        self.init_table_exploit = 'CREATE TABLE IF NOT EXISTS Exploit(`Id` INTEGER PRIMARY KEY NOT NULL, `Name` TEXT, `Module` TEXT, `Product` TEXT, `Cve` TEXT, `Create_date` TEXT, `Description` TEXT, `Authors` TEXT, `References` TEXT)'
        self.init_table_auxiliary = 'CREATE TABLE IF NOT EXISTS Auxiliary(`Id` INTEGER PRIMARY KEY NOT NULL, `Name` TEXT, `Module` TEXT, `Product` TEXT, `Cve` TEXT, `Create_date` TEXT, `Description` TEXT, `Authors` TEXT, `References` TEXT)'
        self.cu.execute(self.init_table_exploit)
        self.cu.execute(self.init_table_auxiliary)

    def del_db(self):
        pass
        # self.cu.execute('delete from')
        # self.conn.commit()

    def rebuild_db(self):
        pass

    def only_insert_data(self, table, Name, Module, Product, Cve, Create_date, Description, Authors, References):
        # 避免重复插入数据
        sql_data = (Name, Module, Product, Cve, Create_date, Description, Authors, References)
        self.cu.execute(f'SELECT Module FROM {table} WHERE Module=\'{Module}\'')
        only_result = self.cu.fetchone()
        if not only_result:
            self.cu.execute(
                f'INSERT INTO {table}(`Name`, `Module`, `Product`, `Cve`, `Create_date`, `Description`, `Authors`, `References`) VALUES(?,?,?,?,?,?,?,?)',
                sql_data)

        self.conn.commit()

    def module_num(self, table):
        self.cu.execute(f'SELECT COUNT(*) FROM {table}')
        return self.cu.fetchone()[0]

    def module_list(self, table):
        # 返回名字、路径、描述
        sql = f'SELECT Name, Module, Description FROM {table}'
        self.cu.execute(sql)
        return self.cu.fetchall()

    def module_path(self):
        # sql = 'SELECT Exploit.Module, Auxiliary.Module FROM Exploit, Auxiliary'
        # sql = 'SELECT Module FROM Auxiliary UNION ALL SELECT Module FROM Exploit'
        sql = 'SELECT \'use \' || Module FROM Auxiliary UNION ALL SELECT \'use \' || Module FROM Exploit'
        self.cu.execute(sql)
        return self.cu.fetchall()

    def search_module(self, keyword):
        # 模糊匹配
        exp_sql = f'SELECT Name, Module FROM Exploit WHERE NAME LIKE \'%{keyword}%\''
        self.cu.execute(exp_sql)
        exp_sql_result = self.cu.fetchall()
        aux_sql = f'SELECT Name, Module FROM Auxiliary WHERE NAME LIKE \'%{keyword}%\''
        self.cu.execute(aux_sql)
        aux_sql_result = self.cu.fetchall()
        if exp_sql_result and aux_sql_result:
            l = []
            l.append(exp_sql_result)
            l.append(aux_sql_result)
            return l
        elif exp_sql_result:
            return exp_sql_result
        elif aux_sql_result:
            return aux_sql_result
        else:
            return None

    def auto_load(self):
        modules = parse_module()
        for i in modules[0]:
            with open(i, 'r', encoding='utf-8') as f:
                content = f.read()
                Name = re.findall("'Name': '(.*?)'", content)[0]
                Product = re.findall("'Product': '(.*?)'", content)[0]
                Module = re.findall("'Module': '(.*?)'", content)[0]
                Cve = re.findall("'Cve': '(.*?)'", content)[0]
                Create_date = re.findall("'Create_date': '(.*?)'", content)[0]
                Description = re.findall("'Description': '(.*?)'", content)[0]
                Authors = re.findall("'Authors': '(.*?)'", content)[0]
                References = re.findall("'References': '(.*?)'", content)[0]
                self.only_insert_data('Exploit', Name, Module, Product, Cve, Create_date, Description, Authors,
                                      References)

        for i in modules[1]:
            with open(i, 'r', encoding='utf-8') as f:
                content = f.read()
                Name = re.findall("'Name': '(.*?)'", content)[0]
                Product = re.findall("'Product': '(.*?)'", content)[0]
                Module = re.findall("'Module': '(.*?)'", content)[0]
                Cve = re.findall("'Cve': '(.*?)'", content)[0]
                Create_date = re.findall("'Create_date': '(.*?)'", content)[0]
                Description = re.findall("'Description': '(.*?)'", content)[0]
                Authors = re.findall("'Authors': '(.*?)'", content)[0]
                References = re.findall("'References': '(.*?)'", content)[0]
                self.only_insert_data('Auxiliary', Name, Module, Product, Cve, Create_date, Description, Authors,
                                      References)
        # exp_info = get_module_info(modules[0])
        # aux_info = get_module_info(modules[1])
        # try:
        #     if exp_info:
        #         self.only_insert_data('Exploit', exp_info['Name'], exp_info['Module'], exp_info['Product'], exp_info['Cve'],
        #                               exp_info['Create_date'], exp_info['Description'], exp_info['Authors'],
        #                               exp_info['References'])
        #     if aux_info:
        #         self.only_insert_data('Auxiliary', aux_info['Name'], aux_info['Module'], aux_info['Product'],
        #                               aux_info['Cve'], aux_info['Create_date'], aux_info['Description'],
        #                               aux_info['Authors'], aux_info['References'])
        # except KeyError:
        #     pass


try:
    module_manager = ModuleManager()
except (sqlite3.OperationalError, Exception) as e:
    LOGGER.exception(e)


def parse_module():
    exp = []
    for dirpath, dirnames, filenames in os.walk('./modules/exploit'):
        for file in filenames:
            if file.endswith('.py') and '__init__' not in file:
                if '__pycache__' not in dirpath:
                    exp.append(f'{dirpath}/{file}')
    aux = []
    for dirpath, dirnames, filenames in os.walk('./modules/auxiliary'):
        for file in filenames:
            if file.endswith('.py') and '__init__' not in file:
                if '__pycache__' not in dirpath:
                    aux.append(f'{dirpath}/{file}')

    return exp, aux


# def get_module_info(modules):
#     dct = {}
#     for i in modules:
#         # print(i)
#         with open(i, 'r') as f:
#             content = f.read()
#             # try:
#             dct['Name'] = re.findall("'Name': '(.*?)'", content)[0]
#             dct['Product'] = re.findall("'Product': '(.*?)'", content)[0]
#             dct['Module'] = re.findall("'Module': '(.*?)'", content)[0]
#             dct['Cve'] = re.findall("'Cve': '(.*?)'", content)[0]
#             dct['Create_date'] = re.findall("'Create_date': '(.*?)'", content)[0]
#             dct['Description'] = re.findall("'Description': '(.*?)'", content)[0]
#             dct['Authors'] = re.findall("'Authors': '(.*?)'", content)[0]
#             dct['References'] = re.findall("'References': '(.*?)'", content)[0]
#             # print(dct)
#             # except IndexError as e:
#                 # print(e)
#                 # return None
#
#     return dct


def random_ua():
    RANDOM_UA = ['Mozilla/4.0 (compatible; MSIE 5.0; Windows NT 5.0)',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.1.20) Gecko/20081217 Firefox/2.0.0.20',
                 'Mozilla/5.0 (X11; U; Linux x86_64) Gecko/2008072820 Firefox/3.0.1',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.16pre) Gecko/20110304 Ubuntu/10.10 (maverick) Firefox/3.6.15pre',
                 'Mozilla/5.0 (X11; U; Linux i686; pl; rv:1.9.0.6) Gecko/2009011912 Firefox/3.0.6',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17',
                 'Mozilla/5.0 (Windows; U; Windows NT 6.0; hu-HU) AppleWebKit/525.26.2 (KHTML, like Gecko) Version/3.2 Safari/525.26.13',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; nl; rv:1.8.0.11) Gecko/20070312 Firefox/1.5.0.11',
                 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X; zh-tw) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13.3',
                 'Mozilla/5.0 (X11; U; Linux x86_64; pl-PL; rv:2.0) Gecko/20110307 Firefox/4.0',
                 'Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.13) Gecko/2009080315 Ubuntu/9.04 (jaunty) Firefox/3.0.13',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; fi-fi) AppleWebKit/420+ (KHTML, like Gecko) Safari/419.3',
                 'Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.7.10) Gecko/20050717 Firefox/1.0.6',
                 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1',
                 'Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.1; .NET CLR 1.1.4322; Alexa Toolbar; .NET CLR 2.0.50727)',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.13) Gecko/2009073022 Firefox/3.0.13 (.NET CLR 3.5.30729)',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.7.9) Gecko/20050711 Firefox/1.0.5',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.0; de-DE; rv:1.7) Gecko/20040626 Firefox/0.9.1',
                 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us) AppleWebKit/531.22.7 (KHTML, like Gecko) Version/4.0.5 Safari/531.22.7',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.9.9',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_4_11; en) AppleWebKit/528.4+ (KHTML, like Gecko) Version/4.0dp1 Safari/526.11.2',
                 'Mozilla/5.0 (Windows; U; Windows NT 6.0; de) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.16) Gecko/20080715 Ubuntu/7.10 (gutsy) Firefox/2.0.0.16',
                 'Mozilla/5.0 (X11; U; Linux x86_64; es-CL; rv:1.9.1.9) Gecko/20100402 Ubuntu/9.10 (karmic) Firefox/3.5.9',
                 'Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt; YComp 5.0.2.6)',
                 'Opera/9.10 (Windows NT 5.1; U; zh-tw)',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/312.5.1 (KHTML, like Gecko) Safari/125.9',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/125.2 (KHTML, like Gecko) Safari/125.8',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/312.5.2 (KHTML, like Gecko) Safari/312.3.3',
                 'Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/530.5 (KHTML, like Gecko) Chrome/2.0.172.6 Safari/530.5',
                 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X; ja-jp) AppleWebKit/523.12.2 (KHTML, like Gecko) Version/3.0.4 Safari/523.12.2',
                 'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.7.12) Gecko/20051218 Firefox/1.0.7',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.9) Gecko/20050711 Firefox/1.0.5',
                 'Mozilla/5.0 (Windows NT 6.0) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.3 Safari/534.24',
                 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/534.2 (KHTML, like Gecko) Chrome/6.0.451.0 Safari/534.2',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/532.2 (KHTML, like Gecko) Chrome/4.0.223.4 Safari/532.2',
                 'Opera/9.80 (Windows NT 6.0; U; pl) Presto/2.7.62 Version/11.01',
                 'Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0',
                 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_6; en-US) AppleWebKit/530.9 (KHTML, like Gecko) Chrome/ Safari/530.9',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8b5) Gecko/20051006 Firefox/1.4.1',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070530 Fedora/1.5.0.12-1.fc6 Firefox/1.5.0.12',
                 'Opera/9.63 (Windows NT 6.1; U; hu) Presto/2.1.1',
                 'Opera/9.02 (Windows NT 5.0; U; sv)',
                 'Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.6) Gecko/20060802 Firefox/1.5.0.6',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.5) Gecko/20070718 Fedora/2.0.0.5-1.fc7 Firefox/2.0.0.5',
                 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36',
                 'Opera/9.60 (X11; Linux x86_64; U)',
                 'Mozilla/5.0 (Windows; U; Windows NT 6.1; it; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6',
                 'Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US) AppleWebKit/532.0 (KHTML, like Gecko) Chrome/3.0.198.1 Safari/532.0',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.18) Gecko/20080921 SUSE/2.0.0.18-0.1 Firefox/2.0.0.18',
                 'Mozilla/4.0 (compatible; MSIE 6.0b; Windows NT 5.0; YComp 5.0.0.0)',
                 'Mozilla/5.0 (X11; U; Linux i686; fr; rv:1.7.10) Gecko/20050721 Firefox/1.0.6 (Ubuntu package 1.0.6)',
                 'Mozilla/5.0 (Windows; U; Win98; en-US; rv:1.7.7) Gecko/20050414 Firefox/1.0.3',
                 'Mozilla/5.0 (X11; U; OpenBSD sparc64; en-CA; rv:1.8.0.2) Gecko/20060429 Firefox/1.5.0.2',
                 'Opera/9.22 (X11; Linux i686; U; en)',
                 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; fr; rv:1.9.2.16) Gecko/20110319 Firefox/3.6.16 (.NET CLR 3.5.30729)',
                 'Mozilla/5.0 (X11; U; Linux x86_64; pl-PL; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.04 (lucid) Firefox/3.6.13',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.4) Gecko/20070530 Fedora/2.0.0.4-1.fc7 Firefox/2.0.0.4',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.3) Gecko/20060425 SUSE/1.5.0.3-7 Firefox/1.5.0.3',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.14) Gecko/20080410 SUSE/2.0.0.14-0.4 Firefox/2.0.0.14',
                 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.801.0 Safari/535.1',
                 'Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.0; WOW64; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; c .NET CLR 3.0.04506; .NET CLR 3.5.30707; InfoPath.1; el-GR)',
                 'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.1) Gecko/2008072610 Firefox/2.0.0.12',
                 'Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/532.0 (KHTML, like Gecko) Chrome/3.0.196.2 Safari/532.0',
                 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20110619 Firefox/5.0',
                 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:14.0) Gecko/20100101 Firefox/14.0.1',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.9) Gecko/20071103 Firefox/2.0.0.9 (Swiftfox)',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; ro-RO; rv:1.7.6) Gecko/20050318 Firefox/1.0.2',
                 'Mozilla/5.0 (X11; U; Linux i686; fi-FI; rv:1.9.0.13) Gecko/2009080315 Linux Mint/6 (Felicia) Firefox/3.0.13',
                 'Opera/9.62 (Windows NT 5.1; U; zh-tw) Presto/2.1.1',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8b4) Gecko/20050908 Firefox/1.4',
                 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_6; en-us) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/125.5.6 (KHTML, like Gecko) Safari/125.12_Adobe',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/85.8.5 (KHTML, like Gecko) Safari/85.8.1',
                 'Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/532.2 (KHTML, like Gecko) Chrome/4.0.221.6 Safari/532.2',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9b4) Gecko/2008030714 Firefox/3.0b4',
                 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en) AppleWebKit/523.5+ (KHTML, like Gecko) Version/3.0.3 Safari/522.12.1',
                 'Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.0.12) Gecko/20070719 CentOS/1.5.0.12-3.el5.centos Firefox/1.5.0.12',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; rv:1.7.3) Gecko/20041001 Firefox/0.10.1',
                 'Mozilla/5.0 (X11; FreeBSD amd64) AppleWebKit/536.5 (KHTML like Gecko) Chrome/19.0.1084.56 Safari/1EA69',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.16) Gecko/20101130 AskTbPLTV5/3.8.0.12304 Firefox/3.5.16 (.NET CLR 3.5.30729)',
                 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_2) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41 Safari/535.1',
                 'Mozilla/5.0 (X11; U; Linux i686; pt-BR; rv:1.8) Gecko/20051111 Firefox/1.5',
                 'Mozilla/5.0 (X11; Mageia; Linux x86_64; rv:10.0.9) Gecko/20100101 Firefox/10.0.9',
                 'Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.8.1) Gecko/20061010 Firefox/2.0',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.2; eu) AppleWebKit/530.4 (KHTML, like Gecko) Chrome/2.0.172.0 Safari/530.4',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US) AppleWebKit/532.0 (KHTML, like Gecko) Chrome/3.0.198 Safari/532.0',
                 'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.20) Gecko/20110804 Red Hat/3.6-2.el5 Firefox/3.6.20',
                 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.1 (KHTML, like Gecko) Ubuntu/11.04 Chromium/13.0.782.41 Chrome/13.0.782.41 Safari/535.1',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit/533.17.8 (KHTML, like Gecko) Version/5.0.1 Safari/533.17.8',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15 (.NET CLR 3.5.30729)',
                 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0b6pre) Gecko/20100903 Firefox/4.0b6pre',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.12) Gecko/2009070818 Ubuntu/8.10 (intrepid) Firefox/3.0.12 FirePHP/0.3',
                 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.11) Gecko/20071204 Ubuntu/7.10 (gutsy) Firefox/2.0.0.11',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.0.9) Gecko/20061206 Firefox/1.5.0.9',
                 'Mozilla/5.0 (Windows NT 5.2) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.794.0 Safari/535.1',
                 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; nl-nl) AppleWebKit/417.9 (KHTML, like Gecko) Safari/417.9.2',
                 'Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20 (.NET CLR 3.5.30729; .NET4.0E)']
    try:
        return RANDOM_UA[random.randint(0, len(RANDOM_UA))]
    except IndexError:
        return RANDOM_UA[0]


def header_format(headers):
    regx = re.findall('<CIMultiDictProxy\((.*?)\)>', str(headers))
    regs = re.findall("'(.*?)': '(.*?)'", regx[0])
    result = []
    for i in regs:
        result.append(f'{i[0]}: {i[1]}')

    return '\n'.join(result)


def parse_dict(wordlist):
    if IS_WIN:
        pwd = os.getcwd() + '\\resources\\' + wordlist.replace('/', '\\')
        return pwd
    else:
        pwd = os.getcwd() + '/resources/' + wordlist
        return pwd


def search_style(result):
    tb = PrettyTable()
    tb.set_style(PLAIN_COLUMNS)
    tb.field_names = ['Name', 'Module']
    tb.add_row(['----', '------'])
    if result:
        for i in result:
            if type(i) == tuple:
                tb.add_row([i[0], i[1]])
            elif type(i) == list:
                tb.add_row([i[0][0], i[0][1]])

        tb.align = 'l'
        print(tb)
    else:
        return None


def list_style(items):
    print('\n')
    tb = PrettyTable()
    tb.set_style(PLAIN_COLUMNS)
    tb.field_names = ['Name', 'Module', 'Description']
    tb.add_row(['----', '------', '-----------'])
    for i in items:
        _ = list(i)
        # print(_)
        tb.add_row(_)

    tb.align = 'l'
    print(tb)
    print('\n')