import importlib
import importlib.util
from zerooo.core.log import LOGGER
from zerooo.core.exception import ModuleNotDefineException


# def parse_exp(path):
#         exp = []
#         for i in os.listdir(path):
#             if '__init__' in i:
#                 pass
#             elif '.pyc' in i:
#                 pass
#             else:
#                 if '.py' in i:
#                     exp.append(i)
#
#         return exp


def load_module(name):
    # if os.path.isdir(name):
    #     exp = parse_exp(name)
    #     for i in exp:
    #         path = (name + i).replace('/', '.')
    #         try:
    #             module_obj = importlib.import_module(name=path)
    #             if hasattr(module_obj, 'Zerooosploit'):
    #                 pass
    #         except ModuleNotFoundError as e:
    #             LOGGER.error(e)
    # else:
    exp = name.replace('/', '.')

    try:
        global mod
        mod = importlib.import_module('modules.' + exp)
        if hasattr(mod, 'Zerooosploit'):
            module_self = getattr(mod, 'Zerooosploit')
            # print(getattr(module_self, 'show_info'))
            # print('class', module_self())
            return module_self()
        else:
            msg = f'Module {exp} doesn\'t define any object named Zerooosploit'
            LOGGER.error(ModuleNotDefineException(msg))
    except ModuleNotFoundError as e:
        LOGGER.error(e)
    except Exception as e:
        LOGGER.exception(e)


def del_module(module_self):
    del module_self


def reload_module():
    return importlib.reload(mod)
