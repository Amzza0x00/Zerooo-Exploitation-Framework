from zerooo.core.loader import plugin_collect
from zerooo.utils.data import module_manager

BANNER = f'''
                                                 _       _ _ 1.0.0#dev
 _______ _ __ ___   ___   ___  ___ _ __ | | ___ (_) |_
|_  / _ \ r'__/ _ \ / _ \ / _ \/ __| '_ \| |/ _ \| | __|
 / /  __/ | | (_) | (_) | (_) \__ \ |_) | | (_) | | |_
/___\___|_|  \___/ \___/ \___/|___/ .__/|_|\___/|_|\__|
                                  |_|

        Zerooo Exploitation Framework

+ -- --=[ {module_manager.module_num('Exploit')} exploits - {module_manager.module_num('Auxiliary')} auxiliary       ]


'''

HELP = '''
核心命令 (Core Commands)
======================

    命令 (Command)       描述 (Description)
    -------------       ------------------
    ?                   帮助菜单 (Help menu)
    exit                退出控制台 (Exit the console)
    help                帮助菜单 (Help menu)
    quit                退出控制台 (Exit the console)
    use                 选择模块 (Select a module name)
    setg                设置全局参数 (Set global variable)
    search              搜索已有模块 (Search module)
    list                列出所以模块 (View all modules)


模块命令 (Module Commands)
========================

    命令 (Command)       描述 (Description)
    -------------       ------------------
    exit                退出当前模块(Unload current module)
    exploit             攻击目标(Attack targets)
    info                显示模块信息(Displays module information)
    options             显示模块设置(Displays module options)
    reload              重载当前模块(Reload current module)
    run                 攻击目标(Attack targets)
    set                 设置模块参数(Set a text to a value)
    show                显示模块全部信息(Displays module of a given type)

'''

global_commands = ['help', 'exit', 'exec', 'search', 'setg', 'quit', 'unsetg', 'list', 'show']
setg_commands = ['setg debug', 'setg proxy']
# module_commands = ['run', 'back', 'set', 'exploit', 'show', 'info', 'options', 'reload', 'exit']
module_commands = ['run', 'back', 'exploit', 'show info', 'show options', 'reload', 'exit']
module_path = module_manager.module_path()
# 读取插件目录
global_plugins = []
for i in plugin_collect.keys(): global_plugins.append(i)
