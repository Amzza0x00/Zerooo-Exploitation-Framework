#!/usr/bin/python
# -*- coding:utf8 -*-
"""
exploits classes

动态加载
"""
import importlib
import prettytable as pt
from zerooosploit.exception import ZeroooException
from zerooosploit.color import *


class ExploitAggregate(object):

    def __init__(self):
        self.option = {}
        self.info = {}

    @staticmethod
    def select_modules(modules):
        """动态加载模块"""
        module = importlib.import_module(name=('modules.' + modules))  # 返回对应模块对象
        if hasattr(module, 'Zerooosploit'):
            module_self = getattr(module, 'Zerooosploit')
            return module_self()


    @staticmethod
    def del_modules(modules):
        """卸载模块"""
        del modules

    def register_option(self, key, value):
        if key in self.option.keys():
            self.option[key]['default'] = value

    def get_options(self, key):
        return self.option[key]['default']

    def show_options(self):
        tb = pt.PrettyTable()
        field_names = []
        add_row = []
        for v, k in self.option.items():
            field_names.append(v)
            for x in k.values():
                add_row.append(x)
        tb.field_names = field_names
        tb.add_row(add_row)
        print(tb)

    def show_info(self):
        tb = pt.PrettyTable()
        field_names = []
        add_row = []
        for v, k in self.info.items():
            field_names.append(v)
            add_row.append(k)
        tb.field_names = field_names
        tb.add_row(add_row)
        print(tb)
