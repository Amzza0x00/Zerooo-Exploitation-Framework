#!/usr/bin/python
# -*- coding:utf8 -*-
"""
exploits classes

动态加载
"""
import importlib
# from zerooosploit.exception import ZeroooException


class ExploitAggregate(object):

    def __init__(self):
        self.option = {}
        self.info = {}

    @staticmethod
    def select_modules(modules):
        """动态加载模块"""
        module = importlib.import_module(name=('modules.' + modules))  # 返回对应模块对象
        if hasattr(module, 'Zerooosploit'):
            module_self = getattr(module, 'Zerooosploit')
            return module_self()

    @staticmethod
    def del_modules(modules):
        """卸载模块"""
        del modules

    def register_option(self, key, value):
        if key in self.option.keys():
            self.option[key]['Current Setting'] = value

    def get_options(self, key):
        return self.option[key]['Current Setting']

    def show_options(self, current_module):
        print('\nModule options ({0}):\n'.format(current_module))
        print('Name\t\tCurrent Setting                                       \t\t\tRequired\t\tDescription')
        print('----\t\t---------------                                       \t\t\t--------\t\t-----------')
        for key in sorted(self.option.keys()):
            print('{0:<4}\t\t{1:<55}\t\t\t{2:<8}\t\t{3:<11}'.format(key, self.get_options(key), self.option[key]["Required"], self.option[key]["Description"]))

        print('\n')

    def show_info(self):
        print('\n')
        for key, value in self.info.items():
            print('{0}:{1}\n'.format(key, value))
